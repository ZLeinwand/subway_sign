{"name":"Real-time Subway Countdown","tagline":"A DIY NYC subway real-time display","body":"## Usage\r\n\r\nThis repository allows you to run a countdown clock for the NYC Subway from the comfort of your own apartment, home or office. You can configure it to display the times for the exact train(s)/station(s) you desire. It runs via RGB LED panels, the Raspberry Pi 2, @hzeller's great [RGB LED library](https://github.com/hzeller/rpi-rgb-led-matrix), and the MTA's real time API. \r\n\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/jUFrGG-O-hE\" frameborder=\"0\" allowfullscreen></iframe>\r\n\r\n\r\n## Requirements\r\n\r\n### Hardware\r\n\r\nWhile the cheapest option to source the hardware necessary for the project is likely Alibaba.com, it generally requires a lot of lead time. To get up and running quickly, I recommend [Adafruit](https://www.adafruit.com/). \r\n\r\nFemale DC Power adapter - 2.1mm jack to screw terminal block\r\nPremium Female/Female Jumper Wires - 40 x 6\"\r\n5V 4A (4000mA) switching power supply - UL Listed\r\nMedium 16x32 RGB LED matrix panel x 2\r\nMiniature WiFi (802.11b/g/n) Module: For Raspberry Pi\r\nRaspberry Pi 2 - Model B - ARMv7 with 1G RAM\r\n5V 2A Switching Power Supply w/ 20AWG 6' MicroUSB Cable\r\n4GB SD card for Raspberry Pi preinstalled with Raspbian Wheezy\r\n\r\nOptional:\r\nUSB or wireless mouse/keyboard, HDMI cable, and display for initial Raspberry Pi setup\r\nMounting hardware\r\n\r\n\r\n### Software\r\nIn addition to a fresh install of Raspbian, you will need to install these libraries:\r\n\r\n[PIL](http://www.pythonware.com/products/pil/)\r\n[gtfs-realtime-bindings](https://developers.google.com/transit/gtfs-realtime/code-samples?hl=en#python)\r\n@hzeller's [RBG LED library](https://github.com/hzeller/rpi-rgb-led-matrix). Make sure to install this in the same folder as this repository.\r\n\r\n## Installation\r\n\r\nTODO: Describe the installation process\r\n\r\n\r\n## Contributing\r\n\r\n1. Fork it!\r\n2. Create your feature branch: `git checkout -b my-new-feature`\r\n3. Commit your changes: `git commit -am 'Add some feature'`\r\n4. Push to the branch: `git push origin my-new-feature`\r\n5. Submit a pull request\r\n\r\n\r\n## License\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2015 Christopher Griffin\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}